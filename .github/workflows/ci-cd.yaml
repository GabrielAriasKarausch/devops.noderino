name: Test and Deploy Noderino

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run health-check test
      run: |
        npm start &  # inicia la app en segundo plano
        sleep 5
        STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/healthcheck || echo 000)
        if [ "$STATUS" -ne 200 ]; then
          echo "Health check failed: status $STATUS"
          exit 1
        fi

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/noderino:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/noderino:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        port: ${{ secrets.EC2_PORT }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          sudo apt update
          sudo apt install docker.io -y
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/noderino:${{ github.sha }}
          sudo docker stop noderino || true
          sudo docker rm noderino || true
          sudo docker run -d \
            --name noderino \
            -p 80:3000 \
            ${{ secrets.DOCKERHUB_USERNAME }}/noderino:${{ github.sha }}
